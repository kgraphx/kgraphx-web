<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>How Does Chinese Segmentation Strategy Effect on Sentiment Analysis of Short Text?</title>
      <link href="/2021/08/26/chinese-seg/"/>
      <url>/2021/08/26/chinese-seg/</url>
      
        <content type="html"><![CDATA[<p><img src="images/chinese-seg.png" alt="cover"></p><p>In term of Chinese natural language processing, it exits one particular problem that how to choose the strategy of word segmentation, which commonly includes char-based and word-based. Targeted at sentiment analysis of short text comparing with long text, the word-based segmentation faces the other problem that there are the more ambiguous or unregistered words in context of short text. The feature extraction done by the different Chinese Word Segmentation impact the statistic distribution of features, and further the accuracy of sentiment analysis. This paper evaluates five Chinese segmentation strategy effect on Sentiment Analysis of Short Text.  We chose two word-based Chinese Word Segmentation (CWS), and three char-based n-gram, then transformed Bag-of-Word (BOW) to Vector Space Model (VSM) which finally was fed into several classifiers to predict sentiment polarity of short text. To reduce the impact of corpora, the study is based a collection of five public corpora.</p><p>Published in: 2021 IEEE 2nd International Conference on Pattern Recognition and Machine Learning (PRML)</p><p>DOI: 10.1109/SEAI52285.2021.9477550</p>]]></content>
      
      
      <categories>
          
          <category> papers </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
            <tag> Sentiment Analysis </tag>
            
            <tag> Chinese Segmentation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leveraging Zipf’s Law to Analyze Statistical Distribution of Chinese Corpus</title>
      <link href="/2021/07/12/leveraging-Zipf/"/>
      <url>/2021/07/12/leveraging-Zipf/</url>
      
        <content type="html"><![CDATA[<p><img src="images/zipf.png" alt="cover"></p><p>In  term of  Chinese  natural  language  processing,  it exits  one  particular  problem  that  how  to  choose  the  strategy  of word  segmentation,  which  commonly  includes  char-based  and word-based.   Targeted   at   sentiment   analysis   of   short   text comparing with long text, the word-based segmentation faces the other problem that there are the more ambiguous or unregistered words in context of short text. The feature extraction done by the different   Chinese   Word   Segmentation   impact   the   statistic distribution  of  features,  and  further the  accuracy  of  sentiment analysis. This paper evaluates five Chinese segmentation strategy effect on Sentiment Analysis of Short Text.  We chose two word-based Chinese Word Segmentation (CWS), and three char-based n-gram and made usage of Zipf’s law to quantify and present the result of word segmentation.</p><p>Published in: 2021 IEEE International Conference on Software Engineering and Artificial Intelligence (SEAI)</p><p>DOI: 10.1109/SEAI52285.2021.9477550</p>]]></content>
      
      
      <categories>
          
          <category> papers </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chinese Segmentation </tag>
            
            <tag> Zipf </tag>
            
            <tag> Feature extraction </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Showing History Trading Record of the Sample Companies with Graph</title>
      <link href="/2021/03/26/graph-trade/"/>
      <url>/2021/03/26/graph-trade/</url>
      
        <content type="html"><![CDATA[<h2 id="可视化展示"><a href="#可视化展示" class="headerlink" title="可视化展示"></a>可视化展示</h2><div id="d3-example"></div><style>.node {stroke: #fff; stroke-width: 1.5px;}.link {stroke: #999; stroke-opacity: .9;}</style><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="d3" src="https://d3js.org/d3.v3.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script><script type="text/javascript">require.config({paths:    {d3: "https://d3js.org/d3.v3.min"}});require(["d3"], function(d3) {  // The code in this block is executed when the  // d3.js library has been loaded.  // First, we specify the size of the canvas  // containing the visualization (size of the  // <div> element).  var width = 900, height = 600;  // We create a color scale.  var color = d3.scale.category10();  // We create a force-directed dynamic graph layout.  var force = d3.layout.force()    .charge(-120)    .linkDistance(30)    .size([width, height]);  // In the <div> element, we create a <svg> graphic  // that will contain our interactive visualization.  var svg = d3.select("#d3-example").select("svg")  if (svg.empty()) {    svg = d3.select("#d3-example").append("svg")          .attr("width", width)          .attr("height", height);  }  // We load the JSON file.  d3.json("https://raw.githubusercontent.com/kgraphx/dataset/master/json/trade_graph.json", function(error, graph) {    force.nodes(graph.nodes)      .links(graph.links)      .start();        // We create a <line> SVG element for each link    // in the graph.    var link = svg.selectAll(".link")      .data(graph.links)      .enter().append("line")      .attr("class", "link");        // We create a <circle> SVG element for each node    // in the graph, and we specify a few attributes.    var node = svg.selectAll(".node")      .data(graph.nodes)      .enter().append("circle")      .attr("class", "node")      .attr("r", 5)  // radius      .style("fill", function(d) {         // The node color depends on the club.         return color(d.size);      })      .call(force.drag);        // The name of each node is the node number.    node.append("title")        .text(function(d) { return d.name; });        // We bind the positions of the SVG elements    // to the positions of the dynamic force-directed    // graph, at each time step.    force.on("tick", function() {      link.attr("x1", function(d){return d.source.x})          .attr("y1", function(d){return d.source.y})          .attr("x2", function(d){return d.target.x})          .attr("y2", function(d){return d.target.y});          node.attr("cx", function(d){return d.x})          .attr("cy", function(d){return d.y});    });  });});</script>]]></content>
      
      
      <categories>
          
          <category> projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kownledge Graph </tag>
            
            <tag> Trading Record </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
